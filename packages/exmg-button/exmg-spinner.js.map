{"version":3,"file":"exmg-spinner.js","sourceRoot":"","sources":["exmg-spinner.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AACxE,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAC1D,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAGzD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAA3C;;QAES,gBAAW,GAAG,KAAK,CAAC;QAOpB,WAAM,GAAG,KAAK,CAAC;IAsCxB,CAAC;IAlCS,cAAc;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEO,aAAa,CAAC,MAAe;QACnC,MAAM,IAAI,GAAG,aAAa,CAAC;QAC3B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IAEM,MAAM;QACX,MAAM,OAAO,GAAG;YACd,aAAa,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW;YAC9C,eAAe,EAAE,IAAI,CAAC,WAAW;SAClC,CAAC;QAEF,OAAO,IAAI,CAAA;;;iBAGE,QAAQ,CAAC,OAAO,CAAC;yBACT,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc;+BACnB,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc;;;;;;;KAOnD,CAAC;IACJ,CAAC;CACF,CAAA;AApCe,kBAAM,GAAG,KAAM,CAAA;AAT7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;gDACD;AAO3B;IALC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC1C,QAAQ,CAAC,UAA6B,KAAc;QACnD,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC;IAC5B,CAAC,CAAC;2CACoB;AATX,WAAW;IADvB,aAAa,CAAC,qBAAqB,CAAC;GACxB,WAAW,CA+CvB;SA/CY,WAAW","sourcesContent":["import { html, property, customElement, LitElement } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map.js\";\nimport { observer } from \"@material/mwc-base/observer.js\";\nimport { style } from \"./styles/exmg-spinner-styles-css\";\n\n@customElement(\"exmg-button-spinner\")\nexport class ExmgSpinner extends LitElement {\n  @property({ type: Boolean })\n  public coolingDown = false;\n\n  @property({ type: Boolean, reflect: true })\n  @observer(function (this: ExmgSpinner, value: boolean) {\n    this.setAriaHidden(!value);\n    this.coolingDown = !value;\n  })\n  public active = false;\n\n  public static styles = style;\n\n  private resetAnimation() {\n    this.active = false;\n    this.coolingDown = false;\n  }\n\n  private setAriaHidden(hidden: boolean) {\n    const attr = \"aria-hidden\";\n    if (hidden) {\n      this.setAttribute(attr, \"true\");\n    } else {\n      this.removeAttribute(attr);\n    }\n  }\n\n  public render() {\n    const classes = {\n      \"exmg-active\": this.active || this.coolingDown,\n      \"exmg-cooldown\": this.coolingDown,\n    };\n\n    return html`\n      <div\n        id=\"spinnerContainer\"\n        class=\"${classMap(classes)}\"\n        @animationend=\"${() => this.resetAnimation}\"\n        @webkitAnimationEnd=\"${() => this.resetAnimation}\"\n      >\n        <div class=\"spinner-layer\">\n          <div class=\"circle-clipper left\"><div class=\"circle\"></div></div>\n          <div class=\"circle-clipper right\"><div class=\"circle\"></div></div>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}