{"version":3,"file":"exmg-dialog-confirm.js","sourceRoot":"","sources":["exmg-dialog-confirm.ts"],"names":[],"mappings":"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","sourcesContent":["import { customElement, html, LitElement, property, query } from \"lit-element\";\nimport \"@material/mwc-icon-button\";\nimport { PaperDialogElement } from \"@polymer/paper-dialog\";\nimport \"@polymer/paper-dialog\";\nimport \"@exmg/exmg-button/exmg-button.js\";\nimport \"@polymer/iron-form\";\nimport { style } from \"./styles/exmg-dialog-styles-css\";\nimport { closeIcon, warningIcon } from \"./exmg-dialog-icons\";\n\n@customElement(\"exmg-dialog-confirm\")\nexport class ExmgConfirmDialog extends LitElement {\n  /**\n   * Title of the dialog\n   */\n  @property({ type: String })\n  public title = \"\";\n\n  /**\n   * Dialog message to display as confirmation question. Alternative would be to just add a slot body including a message.\n   */\n  @property({ type: String })\n  private message = \"\";\n\n  /**\n   * Hide close button ?\n   */\n  @property({ type: Boolean, attribute: \"hide-close-button\" })\n  private hideCloseButton = false;\n\n  /**\n   * Copy for submit button\n   */\n  @property({ type: String, attribute: \"button-copy\" })\n  private buttonCopy = \"\";\n\n  /**\n   * Indicator if submit is in progress This boolean will display the progress\n   * bar at the bottom of the dialog\n   */\n  @property({ type: Boolean, reflect: true })\n  private submitting = false;\n\n  /**\n   * When set this will be shown in the error section of the dialog\n   */\n  @property({ type: String, attribute: \"error-message\" })\n  private errorMessage?: string;\n\n  @query(\"#dialog\")\n  private dialogNode?: PaperDialogElement;\n\n  @query(\"#submitBtn\")\n  private submitBtnNode?: PaperDialogElement;\n\n  @property({ type: Boolean })\n  private hasSlotContent = false;\n\n  private observer?: MutationObserver;\n\n  static styles = [style];\n\n  constructor() {\n    super();\n\n    this.onCloseDialog = this.onCloseDialog.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Options for the observer (which mutations to observe)\n    const config = { attributes: false, childList: true, subtree: false };\n\n    // Create an observer instance linked to the callback function\n    this.observer = new MutationObserver((list: MutationRecord[]) => {\n      for (const mutation of list) {\n        if (mutation.type === \"childList\") {\n          console.log(\"A child node has been added or removed.\");\n          this.hasSlotContent = this.children.length > 0;\n        }\n      }\n    });\n\n    // Start observing the target node for configured mutations\n    this.observer.observe(this, config);\n\n    // Set initial slot state\n    this.hasSlotContent = this.children.length > 0;\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // Clean observer if needed\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private onCloseDialog() {\n    this.reset();\n  }\n\n  public open() {\n    if (this.dialogNode) {\n      this.dialogNode.open();\n    }\n  }\n\n  public close() {\n    if (this.dialogNode) {\n      this.dialogNode.close();\n    }\n  }\n\n  private reset() {\n    this.submitting = false;\n    this.errorMessage = undefined;\n\n    if (this.submitBtnNode) {\n      this.submitBtnNode.removeAttribute(\"disabled\");\n    }\n  }\n\n  public error(error: Error) {\n    this.submitting = false;\n    this.errorMessage = error.message;\n\n    if (this.submitBtnNode) {\n      this.submitBtnNode.removeAttribute(\"disabled\");\n    }\n  }\n\n  public done() {\n    // Reset properties when submit is finished\n    this.submitting = false;\n\n    if (this.submitBtnNode) {\n      this.submitBtnNode.removeAttribute(\"disabled\");\n    }\n\n    // Close dialog\n    this.close();\n  }\n\n  private cancel() {\n    this.dispatchEvent(\n      new CustomEvent(\"cancel\", { bubbles: false, composed: true })\n    );\n  }\n\n  private submit() {\n    // reset error message on new submit\n    this.errorMessage = undefined;\n\n    // Disabled submit button + display progress bar\n    this.submitting = true;\n\n    if (this.submitBtnNode) {\n      this.submitBtnNode.setAttribute(\"disabled\", \"disabled\");\n    }\n\n    // dispatch event\n    this.dispatchEvent(\n      new CustomEvent(\"submit\", { bubbles: false, composed: true })\n    );\n  }\n\n  protected render() {\n    return html`\n      <paper-dialog\n        id=\"dialog\"\n        with-backdrop\n        no-cancel-on-outside-click\n        @iron-overlay-closed=\"${this.onCloseDialog}\"\n      >\n        ${this.hideCloseButton\n          ? \"\"\n          : html`\n              <mwc-icon-button @click=${this.close} class=\"close-button\"\n                >${closeIcon}</mwc-icon-button\n              >\n            `}\n        <header>\n          ${!!this.title ? html` <h2 class=\"title\">${this.title}</h2> ` : \"\"}\n        </header>\n        <div class=\"body\">\n          <div class=\"error ${!!this.errorMessage ? \"show\" : \"\"}\">\n            <span class=\"body\">\n              ${warningIcon}\n              <span class=\"msg\">${this.errorMessage}</span>\n            </span>\n          </div>\n          ${this.hasSlotContent\n            ? html` <slot></slot> `\n            : html` <p>${this.message}</p> `}\n        </div>\n        <div class=\"actions\">\n          <exmg-button dialog-dismiss @click=${this.cancel}>Cancel</exmg-button>\n          <exmg-button\n            id=\"submitBtn\"\n            @click=${this.submit}\n            ?loading=\"${this.submitting}\"\n            >${this.buttonCopy}</exmg-button\n          >\n        </div>\n      </paper-dialog>\n    `;\n  }\n}\n"]}