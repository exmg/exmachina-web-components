class e{constructor(e){this.config=e}async upload(e,t){const o=new XMLHttpRequest;o.upload.addEventListener("progress",(e=>{if(e.lengthComputable){const o=e.loaded/e.total*100;t(o)}}));const r=await(e=>new Promise(((t,o)=>{const r=new FileReader;r.readAsDataURL(e),r.onload=()=>t(r.result),r.onerror=e=>o(e)})))(e),s={filename:e.name,mimetype:e.type,data:r,fileSize:e.size,reduceSize:!1};return new Promise(((e,t)=>{const{uploadUrl:r}=this.config;r||t(new Error("Upload url not found")),o.open("POST",r,!0);for(const e in this.config.headers||{})Object.prototype.hasOwnProperty.call(this.config.headers,e)&&o.setRequestHeader(e,this.config.headers[e]);o.onreadystatechange=()=>{o.readyState===XMLHttpRequest.DONE&&(o.status>=200&&o.status<300?e(o.responseText):t(new Error(`Upload failed with status ${o.status}`)))},o.onerror=()=>{t(new Error("Upload failed due to network error"))},o.send(JSON.stringify(s))}))}}export{e as UploadAdapter};
